// generated by genGoStructApi.go
package api

import (
	"errors"

	"github.com/thomaspeugeot/metabaron/libs/animah/go/models"
)

// EngineAPI is the twin in the "api" namespace of Engine of the "models" namespace
//
// swagger:model EngineAPI
type EngineAPI struct {
	models.Engine

	IDAPI uint // unique ID of the instance in the "api" namespace
}

// CreateAPIEngine creates from engine an instance in the "api" namespace
// CreateAPIEngine performs a deep copy of engine fields
func (aPIGate *APIGateStruct) CreateAPIEngine(engine *models.Engine) (IDAPI uint, err error) {

	engineAPI := new(EngineAPI)

	IDAPI = aPIGate.lastEngineAPIID + 1
	aPIGate.lastEngineAPIID = IDAPI

	// update store
	aPIGate.MapEngineIDAPI[engine] = IDAPI
	aPIGate.MapIDAPIEngine[IDAPI] = engine
	aPIGate.MapEngineAPIIDAPI[engineAPI] = IDAPI
	aPIGate.MapIDAPIEngineAPI[IDAPI] = engineAPI
	return
}

// UpdateAPIEngine updates from engine an instance in the "api" namespace
// UpdateAPIEngine performs a deep copy of engine fields
func (aPIGate *APIGateStruct) UpdateAPIEngine(engine *models.Engine) (IDAPI uint, err error) {

	// check if twin ID exists
	var ok bool
	IDAPI, ok = aPIGate.MapEngineIDAPI[engine]
	if !ok {
		return uint(0), errors.New("unknown engine")
	}

	// get the twin API
	engineAPI := aPIGate.MapIDAPIEngineAPI[IDAPI]

	// update values of engineAPI with a deep copy
	engineAPI.Engine = *engine

	return
}
