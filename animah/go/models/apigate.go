// generated by genGoApiFate.go
package models

// APIGateStruct is the struct of the APIGate in the "models" namespace
//
// APIGateStruct enables CRUD of twin instances in the "api" namespace.
//
// APIGateStruct is a gate. It is "closed" or "open".
//
// The gate is "closed" if APIGateCRUDCallbacks is null. It means all operations on an APIGate
// will have no side effect
//
// The gate is "open" if APIGateCRUDCallbacks is not null, the behavior will depends on the implementation
// of the interface
//
// 	swagger:ignore
type APIGateStruct struct {
	APIGateCRUDCallbacks APIGateCRUDCallbacksInterface // pointer to the callback interface
}

// APIGate is a the singloton gate for CRUD operation between "models" and "api" namespace
//
// APIGate is a singloton instance to performs operations between instances in the "models" namespace and instances
// in the "api" namespace
//
// 	swagger:ignore
var APIGate APIGateStruct

// APIGateCRUDCallbacksInterface is the interface that has to be supported
// by the singloton that manages instances in the "api" namespace
//
// Because pointers that implement associations in the "models" space
// cannot be communicated to the front layer and the DB layer,
// they are irrevelant in the "api" namespace and are impletemented with an
// 	ID uint
// this ID can be computed if and only if the associated instance with the pointers has his twin already
// created in the "api" namespace
// therefore, when an "api" twin is created with a call to the "Create" function, the association IDs are not computed.
// They are computed with a call to the "Update" function
//
//	swagger:ignore
type APIGateCRUDCallbacksInterface interface {

	CreateAPIAction(action *Action) (ID uint, err error)
	UpdateAPIAction(action *Action) (ID uint, err error)

	CreateAPIAgent(agent *Agent) (ID uint, err error)
	UpdateAPIAgent(agent *Agent) (ID uint, err error)

	CreateAPIEngine(engine *Engine) (ID uint, err error)
	UpdateAPIEngine(engine *Engine) (ID uint, err error)

}



// CreateAPIAction creates from action an instance in the "api" namespace
//
// CreateAPIAction performs a deep copy of action fields, if gate is "open"
//
// CreateAPIAction return the ID of the "api" instance
//
// It updates aPIGateStruct maps of ID to instances and map of instances to ID
func (aPIGateStruct *APIGateStruct) CreateAPIAction(action *Action) (IDAPI uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.CreateAPIAction(action)
	}
	return
}

// UpdateAPIAction updates the twin of action in the "api" namespace with values of action
//
// UpdateAPIAction performs a deep copy from from the former to the later
// and computes IDs for the associations
// if gate is "open" CreateAPIAction return the ID of the "api" instance
func (aPIGateStruct *APIGateStruct) UpdateAPIAction(action *Action) (ID uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.UpdateAPIAction(action)
	}
	return
}



// CreateAPIAgent creates from agent an instance in the "api" namespace
//
// CreateAPIAgent performs a deep copy of agent fields, if gate is "open"
//
// CreateAPIAgent return the ID of the "api" instance
//
// It updates aPIGateStruct maps of ID to instances and map of instances to ID
func (aPIGateStruct *APIGateStruct) CreateAPIAgent(agent *Agent) (IDAPI uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.CreateAPIAgent(agent)
	}
	return
}

// UpdateAPIAgent updates the twin of agent in the "api" namespace with values of agent
//
// UpdateAPIAgent performs a deep copy from from the former to the later
// and computes IDs for the associations
// if gate is "open" CreateAPIAgent return the ID of the "api" instance
func (aPIGateStruct *APIGateStruct) UpdateAPIAgent(agent *Agent) (ID uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.UpdateAPIAgent(agent)
	}
	return
}



// CreateAPIEngine creates from engine an instance in the "api" namespace
//
// CreateAPIEngine performs a deep copy of engine fields, if gate is "open"
//
// CreateAPIEngine return the ID of the "api" instance
//
// It updates aPIGateStruct maps of ID to instances and map of instances to ID
func (aPIGateStruct *APIGateStruct) CreateAPIEngine(engine *Engine) (IDAPI uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.CreateAPIEngine(engine)
	}
	return
}

// UpdateAPIEngine updates the twin of engine in the "api" namespace with values of engine
//
// UpdateAPIEngine performs a deep copy from from the former to the later
// and computes IDs for the associations
// if gate is "open" CreateAPIEngine return the ID of the "api" instance
func (aPIGateStruct *APIGateStruct) UpdateAPIEngine(engine *Engine) (ID uint, err error) {
	if aPIGateStruct.APIGateCRUDCallbacks != nil {
		return aPIGateStruct.APIGateCRUDCallbacks.UpdateAPIEngine(engine)
	}
	return
}


