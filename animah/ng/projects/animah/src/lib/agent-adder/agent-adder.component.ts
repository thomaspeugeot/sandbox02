import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { AgentDB } from '../agent-db'
import { AgentService } from '../agent.service'

import { EngineAPI} from '../engine-api'
import { EngineDB} from '../engine-db'
import { EngineService} from '../engine.service'


@Component({
  selector: 'app-agent-adder',
  templateUrl: './agent-adder.component.html',
  styleUrls: ['./agent-adder.component.css']
})
export class AgentAdderComponent implements OnInit {

	agent = {} as AgentDB;


	Engine = {} as EngineDB; // storing values of the field Engine of type Engine


	// generated by genEditableReadablePointerToStruct.go
	engines: EngineDB[];



  constructor(
    private agentService: AgentService, 
	
		private engineService: EngineService,  ) {
  }

  ngOnInit(): void {

    	this.getEngines();

  }


	// generated by genEditableReadablePointerToStruct.go
	getEngines(): void {
		this.engineService.getEngines().subscribe(
			engines => {
				this.engines = engines;

				// init variable for each pointer
				this.engines.forEach(engine => {
					if (engine.ID == this.agent.EngineID) {
						this.Engine = engine
					}
				});
      		}
    	)
	}
  add(): void {


	this.agent.EngineID = this.Engine.ID;
	this.agent.EngineName = this.Engine.Name;

    this.agentService.postAgent( this.agent )
    .subscribe(agent => {
		this.agentService.AgentServiceChanged.next("post")
		
		this.agent = {} // reset fields
	    console.log("agent added")
    });
  }
}
