// generated by genNgDetail.go
import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { AgentDB } from '../agent-db'
import { AgentService } from '../agent.service'


import { EngineAPI} from '../engine-api'
import { EngineDB} from '../engine-db'
import { EngineService} from '../engine.service'


import { Router, RouterState, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-agent-detail',
  templateUrl: './agent-detail.component.html',
  styleUrls: ['./agent-detail.component.css']
})
export class AgentDetailComponent implements OnInit {

	// the AgentDB of interest
	agent: AgentDB;

	Engine = {} as EngineDB; // storing values of the field Engine of type Engine

	// generated by genEditableReadablePointerToStruct.go
	engines: EngineDB[];
	constructor(
		private agentService: AgentService,

		private engineService: EngineService,
		private route: ActivatedRoute,
		private router: Router,
	) {
		// https://stackoverflow.com/questions/54627478/angular-7-routing-to-same-component-but-different-param-not-working
		// this is for routerLink on same component when only queryParameter changes
		this.router.routeReuseStrategy.shouldReuseRoute = function () {
		return false;
		};
  }

  ngOnInit(): void {
	this.getAgent();

    	this.getEngines();

  }

  getAgent(): void {
		const id = +this.route.snapshot.paramMap.get('id');
		this.agentService.getAgent(id)
		.subscribe( 
			agent => 
			{ 
					this.agent = agent

        }
  	);
  }

	// generated by genEditableReadablePointerToStruct.go
	getEngines(): void {
		this.engineService.getEngines().subscribe(
			engines => {
				this.engines = engines;

				// init variable for each pointer
				this.engines.forEach(engine => {
					if (engine.ID == this.agent.EngineID) {
						this.Engine = engine
					}
				});
      		}
    	)
	}

  save(): void {
	const id = +this.route.snapshot.paramMap.get('id');



	this.agent.EngineID = this.Engine.ID;
	this.agent.EngineName = this.Engine.Name;

	this.agentService.updateAgent( this.agent )
    .subscribe(agent => {
		this.agentService.AgentServiceChanged.next("update")

    	console.log("agent saved")
    });
  }
}
