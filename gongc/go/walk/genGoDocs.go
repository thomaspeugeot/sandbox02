package walk

import (
	"fmt"
	"log"
	"os"
	"path/filepath"
	"strings"

	"github.com/jinzhu/gorm"
)

const docsTemplate = `// generated by genGoDocs.go
// Package {{PkgName}} {{PkgName}} backend API
//
// {{PkgName}} exposes types of a package.
//
//     Schemes: http
//     BasePath:
//     Version: 0.1
//     Host: localhost:8080
//
//     Consumes:
//     - application/json
//
//     Produces:
//     - application/json
//
//     Security:
//     - basic
//
//    SecurityDefinitions:
//    basic:
//      type: basic
//
// swagger:meta
package {{PkgName}}
`

// GenGoDocs generates the setup file for the gorm
func GenGoDocs(db *gorm.DB) {

	// relative to the models package, swith to ./controlers package
	filename := filepath.Join(RelativePkgPath, "../docs.go")

	// we should use go generate
	log.Println("generating docs.go file : " + filename)

	f, err := os.Create(filename)
	if err != nil {
		log.Panic(err)
	}

	res := docsTemplate
	res = strings.ReplaceAll(res, "{{PkgName}}", PkgName)
	fmt.Fprintf(f, "%s", res)

	defer f.Close()
}
