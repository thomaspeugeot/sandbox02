package walk

import (
	"fmt"
	"strings"

	"github.com/jinzhu/gorm"
	"github.com/thomaspeugeot/sandbox02/gongc/go/models"
)

// NgIndexTemplateTS ...
const NgIndexTemplateTS = `// generated by "genNgIndex.go"
/*
* Public API Surface of {{PkgName}}
*/

export * from './lib/{{pkgname}}.module'

export * from './lib/splitter/splitter.component'
export * from './lib/sidebar/sidebar.component'

{{Exports}}
{{ExportEnums}}
`

const exportAllComponentTemplate = `
export * from './lib/{{structname}}-detail/{{structname}}-detail.component'
export * from './lib/{{structname}}-adder/{{structname}}-adder.component'
export * from './lib/{{structname}}-presentation/{{structname}}-presentation.component'
export * from './lib/{{structname}}s-table/{{structname}}s-table.component'
export * from './lib/{{structname}}-db'
export * from './lib/{{structname}}-api'
export * from './lib/{{structname}}.service'
`

const exportEnumTemplate = `export * from './lib/{{Enumname}}'
`

// GenNgIndex generates the "public-api.ts"
func GenNgIndex(db *gorm.DB) {

	// create the list of structs
	var structs []models.Struct
	db.Find(&structs)

	exports := ""
	// generates one table compenent per struct
	for _, _struct := range structs {

		lowerCaseStructName := strings.ToLower(_struct.Name)
		res := exportAllComponentTemplate

		res = strings.ReplaceAll(res, "{{Structname}}", _struct.Name)
		res = strings.ReplaceAll(res, "{{structname}}", lowerCaseStructName)
		exports += res
	}

	// create the list of enums
	var enums []models.EnumDB
	db.Find(&enums)

	exportEnums := ""
	// generates one table compenent per enum
	for _, _enum := range enums {

		res := exportEnumTemplate

		res = strings.ReplaceAll(res, "{{Enumname}}", _enum.Name)
		exportEnums += res
	}

	file := createSingleFileOneLevelsAboveNgTargetPath("public-api.ts")
	defer file.Close()

	res := NgIndexTemplateTS
	res = strings.ReplaceAll(res, "{{Exports}}", exports)
	res = strings.ReplaceAll(res, "{{ExportEnums}}", exportEnums)
	res = strings.ReplaceAll(res, "{{PkgName}}", strings.Title(PkgName))
	res = strings.ReplaceAll(res, "{{pkgname}}", PkgName)

	fmt.Fprint(file, res)
}
