import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { ClassshapeDB } from '../classshape-db'
import { ClassshapeService } from '../classshape.service'

import { PositionAPI} from '../position-api'
import { PositionDB} from '../position-db'
import { PositionService} from '../position.service'


@Component({
  selector: 'app-classshape-adder',
  templateUrl: './classshape-adder.component.html',
  styleUrls: ['./classshape-adder.component.css']
})
export class ClassshapeAdderComponent implements OnInit {

	classshape = {} as ClassshapeDB;


	Position = {} as PositionDB; // storing values of the field Position of type Position


	// generated by genEditableReadablePointerToStruct.go
	positions: PositionDB[];



  constructor(
    private classshapeService: ClassshapeService, 
	
		private positionService: PositionService,  ) {
  }

  ngOnInit(): void {

    	this.getPositions();

  }


	// generated by genEditableReadablePointerToStruct.go
	getPositions(): void {
		this.positionService.getPositions().subscribe(
			positions => {
				this.positions = positions;

				// init variable for each pointer
				this.positions.forEach(position => {
					if (position.ID == this.classshape.PositionID) {
						this.Position = position
					}
				});
      		}
    	)
	}
  add(): void {


	this.classshape.PositionID = this.Position.ID;
	this.classshape.PositionName = this.Position.Name;

    this.classshapeService.postClassshape( this.classshape )
    .subscribe(classshape => {
		this.classshapeService.ClassshapeServiceChanged.next("post")
		
		this.classshape = {} // reset fields
	    console.log("classshape added")
    });
  }
}
