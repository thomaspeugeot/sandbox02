// generated by genNgDetail.go
import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { ClassshapeDB } from '../classshape-db'
import { ClassshapeService } from '../classshape.service'


import { PositionAPI} from '../position-api'
import { PositionDB} from '../position-db'
import { PositionService} from '../position.service'


import { Router, RouterState, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-classshape-detail',
  templateUrl: './classshape-detail.component.html',
  styleUrls: ['./classshape-detail.component.css']
})
export class ClassshapeDetailComponent implements OnInit {

	// the ClassshapeDB of interest
	classshape: ClassshapeDB;

	Position = {} as PositionDB; // storing values of the field Position of type Position

	// generated by genEditableReadablePointerToStruct.go
	positions: PositionDB[];
	constructor(
		private classshapeService: ClassshapeService,

		private positionService: PositionService,
		private route: ActivatedRoute,
		private router: Router,
	) {
		// https://stackoverflow.com/questions/54627478/angular-7-routing-to-same-component-but-different-param-not-working
		// this is for routerLink on same component when only queryParameter changes
		this.router.routeReuseStrategy.shouldReuseRoute = function () {
		return false;
		};
  }

  ngOnInit(): void {
	this.getClassshape();

    	this.getPositions();

  }

  getClassshape(): void {
		const id = +this.route.snapshot.paramMap.get('id');
		this.classshapeService.getClassshape(id)
		.subscribe( 
			classshape => 
			{ 
					this.classshape = classshape

        }
  	);
  }

	// generated by genEditableReadablePointerToStruct.go
	getPositions(): void {
		this.positionService.getPositions().subscribe(
			positions => {
				this.positions = positions;

				// init variable for each pointer
				this.positions.forEach(position => {
					if (position.ID == this.classshape.PositionID) {
						this.Position = position
					}
				});
      		}
    	)
	}

  save(): void {
	const id = +this.route.snapshot.paramMap.get('id');



	this.classshape.PositionID = this.Position.ID;
	this.classshape.PositionName = this.Position.Name;

	this.classshapeService.updateClassshape( this.classshape )
    .subscribe(classshape => {
		this.classshapeService.ClassshapeServiceChanged.next("update")

    	console.log("classshape saved")
    });
  }
}
