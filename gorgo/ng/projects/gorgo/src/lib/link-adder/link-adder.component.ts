import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { LinkDB } from '../link-db'
import { LinkService } from '../link.service'

import { VerticeAPI} from '../vertice-api'
import { VerticeDB} from '../vertice-db'
import { VerticeService} from '../vertice.service'


@Component({
  selector: 'app-link-adder',
  templateUrl: './link-adder.component.html',
  styleUrls: ['./link-adder.component.css']
})
export class LinkAdderComponent implements OnInit {

	link = {} as LinkDB;


	Middlevertice = {} as VerticeDB; // storing values of the field Middlevertice of type Vertice


	// generated by genEditableReadablePointerToStruct.go
	vertices: VerticeDB[];



  constructor(
    private linkService: LinkService, 
	
		private verticeService: VerticeService,  ) {
  }

  ngOnInit(): void {

    	this.getVertices();

  }


	// generated by genEditableReadablePointerToStruct.go
	getVertices(): void {
		this.verticeService.getVertices().subscribe(
			vertices => {
				this.vertices = vertices;

				// init variable for each pointer
				this.vertices.forEach(vertice => {
					if (vertice.ID == this.link.MiddleverticeID) {
						this.Middlevertice = vertice
					}
				});
      		}
    	)
	}
  add(): void {


	this.link.MiddleverticeID = this.Middlevertice.ID;
	this.link.MiddleverticeName = this.Middlevertice.Name;

    this.linkService.postLink( this.link )
    .subscribe(link => {
		this.linkService.LinkServiceChanged.next("post")
		
		this.link = {} // reset fields
	    console.log("link added")
    });
  }
}
