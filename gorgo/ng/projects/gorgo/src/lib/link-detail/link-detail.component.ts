// generated by genNgDetail.go
import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { LinkDB } from '../link-db'
import { LinkService } from '../link.service'


import { VerticeAPI} from '../vertice-api'
import { VerticeDB} from '../vertice-db'
import { VerticeService} from '../vertice.service'


import { Router, RouterState, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-link-detail',
  templateUrl: './link-detail.component.html',
  styleUrls: ['./link-detail.component.css']
})
export class LinkDetailComponent implements OnInit {

	// the LinkDB of interest
	link: LinkDB;

	Middlevertice = {} as VerticeDB; // storing values of the field Middlevertice of type Vertice

	// generated by genEditableReadablePointerToStruct.go
	vertices: VerticeDB[];
	constructor(
		private linkService: LinkService,

		private verticeService: VerticeService,
		private route: ActivatedRoute,
		private router: Router,
	) {
		// https://stackoverflow.com/questions/54627478/angular-7-routing-to-same-component-but-different-param-not-working
		// this is for routerLink on same component when only queryParameter changes
		this.router.routeReuseStrategy.shouldReuseRoute = function () {
		return false;
		};
  }

  ngOnInit(): void {
	this.getLink();

    	this.getVertices();

  }

  getLink(): void {
		const id = +this.route.snapshot.paramMap.get('id');
		this.linkService.getLink(id)
		.subscribe( 
			link => 
			{ 
					this.link = link

        }
  	);
  }

	// generated by genEditableReadablePointerToStruct.go
	getVertices(): void {
		this.verticeService.getVertices().subscribe(
			vertices => {
				this.vertices = vertices;

				// init variable for each pointer
				this.vertices.forEach(vertice => {
					if (vertice.ID == this.link.MiddleverticeID) {
						this.Middlevertice = vertice
					}
				});
      		}
    	)
	}

  save(): void {
	const id = +this.route.snapshot.paramMap.get('id');



	this.link.MiddleverticeID = this.Middlevertice.ID;
	this.link.MiddleverticeName = this.Middlevertice.Name;

	this.linkService.updateLink( this.link )
    .subscribe(link => {
		this.linkService.LinkServiceChanged.next("update")

    	console.log("link saved")
    });
  }
}
