// generated by genGoApiGateApi.go
package api

import (
	"github.com/thomaspeugeot/metabaron/examples/laundromat/go/models"
)

// APIGateStruct is the implementation of the APIGateImplCallback interface
type APIGateStruct struct {
	MapMachineIDAPI    map[*models.Machine]uint // map of pointers of models instances to ID in the "api" namespace
	MapIDAPIMachine    map[uint]*models.Machine // map of ID in the "api" namespace to ID in the "models" namespace
	MapMachineAPIIDAPI map[*MachineAPI]uint     // map of pointers of models instances to ID in the "api" namespace
	MapIDAPIMachineAPI map[uint]*MachineAPI     // map of ID in the "api" namespace to ID in the "models" namespace

	// lastMachineAPIID is the last unique identier that has been used.
	// It is initialized at 0, therefore IDAPI starts at 1
	lastMachineAPIID uint

	MapWasherIDAPI    map[*models.Washer]uint // map of pointers of models instances to ID in the "api" namespace
	MapIDAPIWasher    map[uint]*models.Washer // map of ID in the "api" namespace to ID in the "models" namespace
	MapWasherAPIIDAPI map[*WasherAPI]uint     // map of pointers of models instances to ID in the "api" namespace
	MapIDAPIWasherAPI map[uint]*WasherAPI     // map of ID in the "api" namespace to ID in the "models" namespace

	// lastWasherAPIID is the last unique identier that has been used.
	// It is initialized at 0, therefore IDAPI starts at 1
	lastWasherAPIID uint
}

// APIGate is the singloton gate in the "api" namespace
var APIGate APIGateStruct = APIGateStruct{
	MapMachineIDAPI:    make(map[*models.Machine]uint, 0),
	MapIDAPIMachine:    make(map[uint]*models.Machine, 0),
	MapMachineAPIIDAPI: make(map[*MachineAPI]uint, 0),
	MapIDAPIMachineAPI: make(map[uint]*MachineAPI, 0),

	MapWasherIDAPI:    make(map[*models.Washer]uint, 0),
	MapIDAPIWasher:    make(map[uint]*models.Washer, 0),
	MapWasherAPIIDAPI: make(map[*WasherAPI]uint, 0),
	MapIDAPIWasherAPI: make(map[uint]*WasherAPI, 0),
}
