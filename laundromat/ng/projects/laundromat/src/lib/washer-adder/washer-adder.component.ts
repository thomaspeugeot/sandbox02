import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { WasherDB } from '../washer-db'
import { WasherService } from '../washer.service'

import { MachineAPI} from '../machine-api'
import { MachineDB} from '../machine-db'
import { MachineService} from '../machine.service'


@Component({
  selector: 'app-washer-adder',
  templateUrl: './washer-adder.component.html',
  styleUrls: ['./washer-adder.component.css']
})
export class WasherAdderComponent implements OnInit {

	washer = {} as WasherDB;


	Machine = {} as MachineDB; // storing values of the field Machine of type Machine


	// generated by genEditableReadablePointerToStruct.go
	machines: MachineDB[];



  constructor(
    private washerService: WasherService, 
	
		private machineService: MachineService,  ) {
  }

  ngOnInit(): void {

    	this.getMachines();

  }


	// generated by genEditableReadablePointerToStruct.go
	getMachines(): void {
		this.machineService.getMachines().subscribe(
			machines => {
				this.machines = machines;

				// init variable for each pointer
				this.machines.forEach(machine => {
					if (machine.ID == this.washer.MachineID) {
						this.Machine = machine
					}
				});
      		}
    	)
	}
  add(): void {


	this.washer.MachineID = this.Machine.ID;
	this.washer.MachineName = this.Machine.Name;

    this.washerService.postWasher( this.washer )
    .subscribe(washer => {
		this.washerService.WasherServiceChanged.next("post")
		
		this.washer = {} // reset fields
	    console.log("washer added")
    });
  }
}
