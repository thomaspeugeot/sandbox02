// generated by genNgDetail.go
import { Component, OnInit } from '@angular/core';
import {FormBuilder, FormControl, FormGroup} from '@angular/forms';

import { WasherDB } from '../washer-db'
import { WasherService } from '../washer.service'


import { MachineAPI} from '../machine-api'
import { MachineDB} from '../machine-db'
import { MachineService} from '../machine.service'


import { Router, RouterState, ActivatedRoute } from '@angular/router';

@Component({
  selector: 'app-washer-detail',
  templateUrl: './washer-detail.component.html',
  styleUrls: ['./washer-detail.component.css']
})
export class WasherDetailComponent implements OnInit {

	// the WasherDB of interest
	washer: WasherDB;

	Machine = {} as MachineDB; // storing values of the field Machine of type Machine

	// generated by genEditableReadablePointerToStruct.go
	machines: MachineDB[];
	constructor(
		private washerService: WasherService,

		private machineService: MachineService,
		private route: ActivatedRoute,
		private router: Router,
	) {
		// https://stackoverflow.com/questions/54627478/angular-7-routing-to-same-component-but-different-param-not-working
		// this is for routerLink on same component when only queryParameter changes
		this.router.routeReuseStrategy.shouldReuseRoute = function () {
		return false;
		};
  }

  ngOnInit(): void {
	this.getWasher();

    	this.getMachines();

  }

  getWasher(): void {
		const id = +this.route.snapshot.paramMap.get('id');
		this.washerService.getWasher(id)
		.subscribe( 
			washer => 
			{ 
					this.washer = washer

        }
  	);
  }

	// generated by genEditableReadablePointerToStruct.go
	getMachines(): void {
		this.machineService.getMachines().subscribe(
			machines => {
				this.machines = machines;

				// init variable for each pointer
				this.machines.forEach(machine => {
					if (machine.ID == this.washer.MachineID) {
						this.Machine = machine
					}
				});
      		}
    	)
	}

  save(): void {
	const id = +this.route.snapshot.paramMap.get('id');



	this.washer.MachineID = this.Machine.ID;
	this.washer.MachineName = this.Machine.Name;

	this.washerService.updateWasher( this.washer )
    .subscribe(washer => {
		this.washerService.WasherServiceChanged.next("update")

    	console.log("washer saved")
    });
  }
}
